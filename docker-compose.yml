version: '3.9'

services:
  app:
    image: 'weather:latest'
    build:
      context: .
    deploy:
      mode: replicated
      replicas: 3
    networks:
      - open-weather-network
    ports:
      - "9595-9597:8080"
    environment:
      - API_KEY=${API_KEY}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/weatherdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres

  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - open-weather-network

  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost
    networks:
      - open-weather-network

networks:
  open-weather-network:
